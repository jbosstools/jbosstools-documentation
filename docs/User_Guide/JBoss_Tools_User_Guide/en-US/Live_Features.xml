<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "User_Guide.ent">
%BOOK_ENTITIES;
]>
<section>
	<title>Features of LiveReload Tools</title>

	<section>
	<title>Features Overview</title>
	
		<para>The aim of this section is to guide you in using LiveReload Tools:</para>
		<itemizedlist>
			<listitem><para>Create a LiveReload server to receive information from the IDE on resource changes</para></listitem>
			<listitem><para>Configure LiveReload for use with system web browsers and external devices</para></listitem>
			<listitem><para>View resources in LiveReload-enabled web browsers, including system and external device browsers and BrowserSim</para></listitem>
		</itemizedlist>

	</section>


	<section>
		<title>Create a LiveReload Server</title>
	
		<para>The LiveReload server is integral to the LiveReload integration with the IDE. In its default configuration, the server receives information from the IDE when resources change and sends notifications for refresh actions to be taken. The server may also be further configured to inject the necessary JavaScript code snippets into HTML files or enable remote connections. The procedure below guides you through creating a default LiveReload server.</para>
		
		<procedure>
			<title>Create a LiveReload Server</title>
			<step><para>In the <guilabel>Servers</guilabel> tab, click <guilabel>create a new server</guilabel> or right-click an existing server and click <guimenu>New</guimenu>&rarr;<guimenu>Server</guimenu>.</para></step>
			<step><para>From the list of server types, expand <guilabel>Basic</guilabel> and select <guilabel>LiveReload Server</guilabel>.</para></step>
			<step><para>The <guilabel>Server's host name</guilabel> and <guilabel>Server name</guilabel> fields are automatically populated. The <command>localhost</command> value in the <guilabel>Server's host name</guilabel> field indicates that the server is to be run on the local system and the value in the <guilabel>Server name</guilabel> field is the name by which the LiveReload server is identified in the <guilabel>Servers</guilabel> tab. You can edit these values as appropriate by typing in the fields.</para></step>
			<step><para>Click <guibutton>Finish</guibutton> to close the window. The LiveReload server is listed in the <guilabel>Servers</guilabel> tab.</para></step>
		</procedure>

		<note><para>Alternatively, LiveReload servers can be automatically created when you select to view workspace and deployed resources in web browsers using the actions provided by LiveReload Tools.</para></note>

	</section>


	<section>
		<title>Configure the LiveReload Server</title>

		<para>A LiveReload client must be inserted into HTML files in order for it to receive the LiveReload server notifications about changed resources. LiveReload Tools provides additional configuration options so that the LiveReload server can inject the necessary <command>&lt;script&gt;</command> element into the HTML resources. Furthermore, the LiveReload server can be configured to allow access from external devices, enabling LiveReload to function in browsers of remote devices.</para> 
		
		<para>The details below outline how to set the configuration options using the Server Editor. To open the Server Editor for a LiveReload server, in the <guilabel>Servers</guilabel> tab double-click the LiveReload server. Alternatively, right-click the LiveReload server and click <guimenu>Open</guimenu> or press <keycap>F3</keycap>.</para>
		
		<variablelist>
			<varlistentry>
				<term>Insert JavaScript code snippet to resources</term>
				<listitem><para>In the <guilabel>Server Editor</guilabel> under <guilabel>LiveReload Server Configuration</guilabel>, select the <guilabel>Inject the livereload.js script in HTML pages</guilabel> check box.</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>Enable LiveReload in external device browsers</term>
				<listitem><para>In the <guilabel>Server Editor</guilabel> under <guilabel>LiveReload Server Configuration</guilabel>, select the <guilabel>Allow Remote Connections</guilabel> check box. This option is disabled by default when a LiveReload server is created as it exposes your workspace files, which may not always be desirable.</para></listitem>
			</varlistentry>
		</variablelist>

		<para>All changes to the settings of a LiveReload server must be saved and the server restarted before the results will take effect. To save setting changes, press <keycap>Ctrl+S</keycap> or click <guimenu>File</guimenu>&rarr;<guimenu>Save</guimenu> or click the <guibutton>Save</guibutton> icon. To restart the server, in the <guilabel>Servers</guilabel> tab right-click the LiveReload server and click <guimenu>Restart</guimenu>.</para>
	
	</section>


	<section>
		<title>View Resources in LiveReload-enabled Browsers</title>

		<para>You can use the actions of LiveReload Tools to open resources in browsers with LiveReload enabled, as detailed below. Note that if the requisite LiveReload server does not exist or is not correctly configured, you are prompted by LiveReload Tools, which can complete the necessary requirements for you.</para>

		<variablelist>
			<title></title>
			<varlistentry>
				<term>View workspace resources on an external device</term>
				<listitem><para>In the <guilabel>Project Explorer</guilabel> tab, right-click the HTML file and click <guimenu>Open With</guimenu>&rarr;<guimenu>Web Browser via LiveReload Server</guimenu>. This requires the server to be configured to <guilabel>Inject the livereload.js script in HTML pages</guilabel> and, if the server is not correctly configured, you are prompted to enable this option. The IDE-specified external web browser opens, with LiveReload activated, and displays the workspace resource.</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>View deployed resources in a system browser</term>
				<listitem><para>Ensure the server and application of the deployed resources are started. In the <guilabel>Servers</guilabel> tab, right-click the application and click <guimenu>Show In</guimenu>&rarr;<guimenu>Web Browser via LiveReload Server</guimenu>. This requires the server to be configured to <guilabel>Inject the livereload.js script in HTML pages</guilabel> and, if the server is not correctly configured, you are prompted to enable this option. The IDE-specified external web browser opens, with LiveReload activated, and displays the deployed resource.</para>
					<note><para>To change the IDE-specified external web browser, click <guimenu>Window</guimenu>&rarr;<guimenu>Preferences</guimenu> and expand <guilabel>General</guilabel>&rarr;<guilabel>Web Browser</guilabel>. From the <guilabel>External web browsers</guilabel> list, select the browser to use for actions involving external web browsers. Click <guibutton>Apply</guibutton> and click <guibutton>OK</guibutton> to close the window.</para></note>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>View deployed resources on an external device</term>
				<listitem><para>Ensure the server and application of the deployed resources are started. In the <guilabel>Servers</guilabel> tab, right-click the application and click <guimenu>Show In</guimenu>&rarr;<guimenu>Web Browser on External Device</guimenu>. This requires the server to be configured to <guilabel>Inject the livereload.js script in HTML pages</guilabel> and <guilabel>Allow Remote Connections</guilabel> and, if the server is not correctly configured, you are prompted to enable these options. A QR code and web address corresponding to the deployed application are displayed and these can be input into external device browsers.</para></listitem>
			</varlistentry>
		</variablelist>

		<note><para>The configuration of a LiveReload server can be viewed and manually set in the <guilabel>Server Editor</guilabel> tab.</para></note>
		
	</section>


	<section>
		<title>View Resources in LiveReload-enabled BrowserSim</title>
	
		<para>The LiveReload server can be used in conjunction with BrowserSim. In this case, the server sends notifications about changed resources and BrowserSim inserts the JavaScript code, which invokes the simulated device browser window to refresh. The procedure below outlines how to enable LiveReload in BrowserSim for workspace and deployed resources.</para>

		<procedure>
			<title>View Resources in LiveReload-enabled BrowserSim</title>
			<step><para>Ensure the LiveReload server is started. If it is not started, in the <guilabel>Servers</guilabel> tab right-click the LiveReload server and click <guimenu>Start</guimenu>.</para></step>
			<step><para>Complete the appropriate step depending on the location of your resources:</para>
				<stepalternatives>
					<step><para>For workspace resources, in the <guilabel>Project Explorer</guilabel> tab right-click the <filename>.html</filename> file and click <guimenu>Open With</guimenu>&rarr;<guilabel>BrowserSim</guilabel>.</para></step>
					<step><para>For deployed resources, in the <guilabel>Servers</guilabel> tab right-click the application and click <guimenu>Show In</guimenu>&rarr;<guilabel>BrowserSim</guilabel>.</para>
						<important><para>Ensure the server and application of the deployed resources are started before attempting to view the resources in LiveReload-enabled BrowserSim. To start the server and the application, in the <guilabel>Servers</guilabel> tab right-click each and click <guimenu>Start</guimenu>.</para></important>
					</step>
				</stepalternatives>
			</step>
			<step><para>Right-click the simulated device and ensure the <guilabel>Enable LiveReload</guilabel> check box is selected.</para></step>
		</procedure>

	</section>
	
</section>

