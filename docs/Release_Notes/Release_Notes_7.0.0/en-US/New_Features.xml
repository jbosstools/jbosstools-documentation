<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Release_Notes_7.0.0.ent">
%BOOK_ENTITIES;
]>
<chapter>
	<title>New Features</title>

	<para>This release of JBoss Developer Studio includes new features to enhance and extend its functionality:</para>

	<variablelist>
		<title></title>			
		<varlistentry>
			<term>Source Code</term>
			<listitem>
				<itemizedlist>
					<listitem><para>The source code for JBoss Developer Studio has always been available from the Red Hat Customer Portal for inspection but additional steps have been taken so that you can also build the source code into a working copy of JBoss Developer Studio.</para></listitem>					
				</itemizedlist>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>JBoss Central</term>
			<listitem>
				<itemizedlist>
					<listitem><para>The JBoss Central tab has been given a new and improved appearance in order to provide you with a better user experience. Changes to the Getting Started page include project wizard descriptions when hovering on project icons, increased visibility of quickstart project wizards, links to the Ticket Monster tutorial by JBoss Developer Framework, aggregated blog and twitter feeds via JBoss Buzz, and links to resources such as documentation and forums.</para></listitem>
					<listitem><para>If you do not have the necessary plug-in installed to use a project wizard, you are prompted to install it when you select the wizard.</para></listitem>
					<listitem><para>The available quickstart projects have been expanded to encompass Portal applications.</para></listitem>
					<listitem><para>The Software/Updates page continues to list available software and updates for the IDE and now includes OpenShift Tools.</para></listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>				
		<varlistentry>
			<term>Project Examples</term>
			<listitem>
				<itemizedlist>
					<listitem><para>You can use the new <guimenu>Show In</guimenu>&rarr;<guimenu>Cheat Sheets</guimenu> feature to open imported project cheat sheets in the Cheat Sheets tab.</para></listitem>
					<listitem><para>You can customize the automated opening behavior of cheat sheets in imported projects that have this facility in <guimenu>Preferences</guimenu> under <guilabel>JBoss Tools</guilabel>&rarr;<guilabel>Project Examples</guilabel>.</para></listitem>
					<listitem><para>In order to achieve the cheat sheet features, new context sensitive parameterized commands have been introduced that you can also incorporated into cheat sheets you create.</para></listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>JBoss Server Tools</term>
			<listitem>
				<itemizedlist>
					<listitem><para>Support has been extended to AS 7.1 and its derived products.</para></listitem>
					<listitem><para>Support for previous and current versions of GateIn have been added, specifically versions 3.3.0, 3.4.0 and 3.5.0.</para></listitem>
					<listitem><para>You can customize the behavior governing the addition and removal of deployment scanners to a server through the Server editor.</para></listitem>
					<listitem><para>Start and stop actions for deployed modules have been implemented such that stopped modules will be undeployed by the server but continue to reside in the deployment folder of the server. This behavior aligns with that of the administrative consoles of servers such as Red&nbsp;Hat&nbsp;JBoss&nbsp;Enterprise&nbsp;Application&nbsp;Platform.</para></listitem>
					<listitem><para>Runtime detection is extended to Tomcat servers.</para></listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>		
		<varlistentry>
			<term>Forge Tools</term>
			<listitem>
				<itemizedlist>
					<listitem><para>The embedded Forge runtime server is version 1.3.2.Final.</para></listitem>
					<listitem><para>Wizards have been implemented for common Forge commands as a visual and guided alternative to the command line. The Forge wizards can be found by clicking <guimenu>File</guimenu>&rarr;<guimenu>New</guimenu>&rarr;<guimenu>Other</guimenu> and expanding <guilabel>JBoss Tools</guilabel>&rarr;<guilabel>Forge</guilabel>. All of the wizards have progress bars to indicate their progress.</para></listitem>
					<listitem><para>The current wizards enable the generation of entities from existing databases, the creation of a scaffolding user interface based on JPA project entities, and the generation of REST endpoints for entities. More wizards are to be added in future releases.</para></listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>Maven Tools</term>
			<listitem>
				<itemizedlist>
					<listitem><para>The JPA, JSF and JAX-RS configurators were contributed to the m2e-wtp project, at the Eclipse Foundation, so they are available to Eclipse users in addition to JBoss Developer Studio users.</para></listitem>
					<listitem><para>While you could already add and remove the Maven repositories defined under profiles in your <filename>settings.xml</filename> file, you can now also edit existing profiles.</para></listitem>
					<listitem><para>Automatic downloading of missing JAR dependencies for Maven projects has been extended to all types of projects. As such, you are informed when a compatible source is found, downloaded sources are stored in your local Maven repository and you can automate source associations with the <guilabel>Remember my decision</guilabel> feature.</para></listitem>
					<listitem><para>More information is provided about dependencies when a project is converted into a Maven project. After double-clicking a dependency to change the scope, non-default scopes and optional attributes for compile and runtime scopes are explicitly displayed in the "Maven Dependency" column of the dependency identification page.</para></listitem>
					<listitem><para>The automatic source lookup feature has been extended for Maven projects. Rather than solely checking that a sourcePath file is set and exists, it now checks whether the attached source contains matching source files and it can download sources when they are incorrect or missing. </para></listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>LiveReload Tools</term>
			<listitem>
				<itemizedlist>
					<listitem><para>This new tool implements LiveReload functionality in the IDE. LiveReload automatically refreshes web pages as changes to the source files are made and saved, removing the need to manually refresh web pages and improving the workflow for developers.</para></listitem>
					<listitem><para>LiveReload Tools can be used in conjunction with both workspace web application resources and those deployed on servers.</para></listitem>
					<listitem><para>The <filename>livereload.js</filename> script can be automatically injected into HTML pages, negating the need for LiveReload browser extensions.</para></listitem>
					<listitem><para>LiveReload Tools enables LiveReload for web pages viewed on external devices with the <guilabel>Allow Remote Connections</guilabel> feature. In conjunction with this, LiveReload Tools has introduced QR codes that can be scanned in order to simplify viewing on external devices.</para></listitem>
					<listitem><para>Prompts assist in automatically creating and starting LiveReload servers as needed.</para></listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>JSF Tools</term>
			<listitem>
				<itemizedlist>
					<listitem><para>JSF Tools ensures xmlns are automatically added to files when you insert a JSF component into a page with the code assist feature. This is possible because JSF Tools provides code assist for all components used in a project and not only those defined in the current page.</para></listitem>
					<listitem><para>Strict tag validation has been introduced which checks components and attributes used in XHTML pages against appropriate tag libraries. Tag validation is disabled by default but can be enabled in <guimenu>Preferences</guimenu> under <guilabel>JBoss Tools</guilabel>&rarr;<guilabel>Web</guilabel>&rarr;<guilabel>JSF</guilabel>&rarr;<guilabel>Validation</guilabel>.</para></listitem>
					<listitem><para>Support is available for JSF 2.2 in the JSF Project wizard.</para></listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>CDI Tools</term>
			<listitem>
				<itemizedlist>
					<listitem><para>In response to CDI validator warnings, the Quick Fix menu will assist in creating missing <filename>beans.xml</filename> files.</para></listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>			
		<varlistentry>
			<term>Web Service Tools</term>
			<listitem>
				<itemizedlist>
					<listitem><para>The WS Tester has <guimenu>GET</guimenu> as the default test type, where previously it was JAX-WS. This is in alignment with the continuing promotion of RESTful services.</para></listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>			
		<varlistentry>
			<term>BrowserSim</term>
			<listitem>
				<itemizedlist>
					<listitem><para>iPad and iPad Mini skins have been added to the ever growing range of available simulated devices.</para></listitem>
					<listitem><para>FireBug Lite and Weinre have been integrated so that you can debug the source pages of your web applications with familiar tools.</para></listitem>
					<listitem><para>LiveReload is available on simulated devices so that open web pages are automatically updated as you change the source code. This feature can be enabled on a per simulated device basis and the port used to communicate with the LiveReload server can be customized.</para></listitem>
					<listitem><para>You can take screen captures of simulated devices and their web pages and open multiple synchronized simulated devices showing the same web page but with different skins.</para></listitem>
					<listitem><para>The BrowserSim restriction requiring 64-bit Microsoft Windows operating systems to use 32-bit JBoss Developer Studio installations is lifted because the JVM with which to launch BrowserSim can be specified independently in the IDE <guimenu>Preferences</guimenu>, under <guilabel>BrowserSim/CordovaSim</guilabel>. This enables BrowserSim to be run with 32-bit JVMs from within 64-bit JBoss Developer Studio installations on 64-bit Microsoft Windows operating systems. Note that 32-bit JVM choice is limited to Oracle 32-bit JRE 1.6, JDK 1.6, or JDK 1.7 on Microsoft Windows operating systems because Oracle 32-bit JRE 1.7 is incompatible with Apple Safari.</para></listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>Mobile Web Tools</term>
			<listitem>
				<itemizedlist>
					<listitem><para>jQuery Mobile has been further integrated into the IDE, with drag-and-drop palette capabilities and a code completion feature. When dragging and dropping jQuery Mobile components from Mobile Palette into your HTML and HTML5 source code, corresponding wizards open to assist you in completing the attribute fields of the component and inserting JS and CSS references into source files when missing. The inserted code is formatted based on IDE preferences for text editors.</para></listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>						
		<varlistentry>
			<term>OpenShift Tools</term>
			<listitem>
				<itemizedlist>
					<listitem><para>OpenShift Tools has been made smarter: you are automatically asked if you want to publish changes to OpenShift when changes are detected in local copies of your projects, such as after new project creation and project importing and the Console tab is made visible after publishing so that you can have a detailed look at what happened.</para></listitem>
					<listitem><para>You can restart applications deployed on OpenShift from within the IDE, actually restarting your OpenShift node and your application.</para></listitem>
					<listitem><para>Enhancements have been made to the information provided about cartridges, warnings about lack of SSH keys and impact of removing cartridges, access to credentials for Jenkins applications, port forwarding for scalable applications, and dragging and dropping projects on an OpenShift server adapter to deploy TomCat applications to OpenShift.</para></listitem>
					<listitem><para>OpenShift Tools supports the changes to OpenShift that enable you to use use MySQL and Postgres databases simultaneously.</para></listitem>
					<listitem><para>The OpenShift Application wizard has been extended in line with OpenShift: new applications can be created using existing git repositories hosted at GitHub, the behavior of automatic Maven builds when resources are pushed to OpenShift can be specified, and necessary information relating to the application type is displayed upon wizard completion.</para></listitem>
					<listitem><para>OpenShift uses markers to enable and disable features, such as automatic Maven builds, and actions to view and set markers have been introduced by OpenShift Tools.</para></listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>						
	</variablelist>

</chapter>

